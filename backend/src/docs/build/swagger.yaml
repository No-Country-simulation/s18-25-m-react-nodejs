openapi: 3.0.0
info:
  title: Developer Social Network API
  version: 1.0.0
  description: Documentaci√≥n de la API usando Swagger
servers:
  - url: 'http://ec2-100-25-217-101.compute-1.amazonaws.com'
    description: Production server
  - url: 'http://localhost:3000/api/v1'
    description: Sandbox server (uses test data)
tags:
  - name: Posts
    description: API para gestionar posts
  - name: Project
    description: API para gestionar projects
  - name: Authentication
    description: API para autenticar usuarios
paths:
  /post:
    get:
      summary: Obtiene todos los posts
      tags:
        - Posts
      responses:
        '200':
          description: Lista de posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1post~1%7Bid%7D/put/requestBody/content/application~1json/schema'
              example:
                - id: '1'
                  title: Primer post
                  content: Contenido del primer post
                  user_id: '12345'
                  technologies:
                    - name: react
                      color: '#ffffff'
                    - name: express
                      color: '#000000'
                - id: '2'
                  title: Segundo post
                  content: Contenido del segundo post
                  user_id: '67890'
                  technologies:
                    - name: nextjs
                      color: '#bbbbbb'
    post:
      summary: Crea un nuevo post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                user_id:
                  type: number
            example:
              title: Mi primer post
              content: Este es el contenido de mi primer post
              user_id: 12345
      responses:
        '201':
          description: Post creado
          content:
            application/json:
              schema:
                $ref: '#/paths/~1post~1%7Bid%7D/put/requestBody/content/application~1json/schema'
              example:
                id: '1'
                title: Mi primer post
                content: Este es el contenido de mi primer post
                user_id: 12345
  '/post/{id}':
    get:
      summary: Obtiene un post por ID
      tags:
        - Posts
      parameters:
        - in: path
          name: id
          required: true
          description: ID del post
          schema:
            type: string
      responses:
        '200':
          description: Post encontrado
          content:
            application/json:
              schema:
                $ref: '#/paths/~1post~1%7Bid%7D/put/requestBody/content/application~1json/schema'
              example:
                id: '1'
                title: Mi primer post
                content: Este es el contenido de mi primer post
                user_id: '12345'
                technologies:
                  - name: nextjs
                    color: '#bbbbbb'
        '404':
          description: Post no encontrado
    delete:
      summary: Elimina un post por ID
      tags:
        - Posts
      parameters:
        - in: path
          name: id
          required: true
          description: ID del post
          schema:
            type: string
      responses:
        '204':
          description: Post eliminado
        '404':
          description: Post no encontrado
    put:
      summary: Modifica un post ya existente
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                content:
                  type: string
                user_id:
                  type: number
                technologies:
                  type: array
                  items:
                    $ref: '#/paths/~1technology/post/responses/201/content/application~1json/schema'
            example:
              title: Mi primer post
              content: Este es el contenido de mi primer post
              user_id: '12345'
      responses:
        '201':
          description: Post modificado
          content:
            application/json:
              schema:
                $ref: '#/paths/~1post~1%7Bid%7D/put/requestBody/content/application~1json/schema'
              example:
                id: '1'
                title: Mi primer post
                content: Este es el contenido de mi primer post
                user_id: '12345'
  /project:
    post:
      summary: Crea un nuevo proyecto
      tags:
        - Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                role:
                  type: string
                url:
                  type: string
                collaborators:
                  type: string
      responses:
        '201':
          description: Proyecto creado
    get:
      summary: Obtiene todos los proyectos
      tags:
        - Project
      responses:
        '200':
          description: Lista de proyectos
  '/project/{id}':
    get:
      summary: Obtiene un proyecto por ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          required: true
          description: ID del proyecto
      responses:
        '200':
          description: Proyecto encontrado
        '404':
          description: Proyecto no encontrado
    put:
      summary: Actualiza un proyecto por ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          required: true
          description: ID del proyecto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Proyecto actualizado
        '404':
          description: Proyecto no encontrado
    delete:
      summary: Elimina un proyecto por ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          required: true
          description: ID del proyecto
      responses:
        '204':
          description: Proyecto eliminado
        '404':
          description: Proyecto no encontrado
  /technology:
    get:
      summary: Obtiene todos las tecnologias
      tags:
        - Technologies
      responses:
        '200':
          description: Lista de las tecnologias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1technology/post/responses/201/content/application~1json/schema'
              example:
                - name: react
                  color: '#ffffff'
                - name: express
                  color: '#000000'
    post:
      summary: Crea una nueva tecnologia
      tags:
        - Technologies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
            example:
              name: angular
              color: '#ffffff'
      responses:
        '201':
          description: tecnologia creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  color:
                    type: string
              example:
                name: angular
                color: '#ffffff'
  '/technology/{name}':
    get:
      summary: Obtiene una tecnologia por nombre
      tags:
        - Technologies
      parameters:
        - in: path
          name: name
          required: true
          description: Nombre de la tecnologia
          schema:
            type: string
      responses:
        '200':
          description: tecnologia encontrada
          content:
            application/json:
              schema:
                $ref: '#/paths/~1technology/post/responses/201/content/application~1json/schema'
              example:
                name: react
                color: '#ffffff'
        '404':
          description: tecnologia no encontrada
    delete:
      summary: Elimina una tecnologia por nombre
      tags:
        - Technologies
      parameters:
        - in: path
          name: name
          required: true
          description: nombre de la tecnologia
          schema:
            type: string
      responses:
        '204':
          description: tecnologia eliminada
        '404':
          description: tecnologia no encontrada
    put:
      summary: Modifica una tecnologia ya existente
      tags:
        - Technologies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1technology/post/requestBody/content/application~1json/schema'
            example:
              name: react
              color: '#ffffff'
      responses:
        '201':
          description: tecnologia modificada
          content:
            application/json:
              schema:
                $ref: '#/paths/~1technology/post/responses/201/content/application~1json/schema'
              example:
                name: react
                color: '#ffffff'
  /auth/register:
    post:
      summary: Registra un nuevo usuario
      tags:
        - Authentication
      responses:
        '201':
          description: Usuario registrado exitosamente
        '400':
          description: Error en la petici√≥n
  /auth/login:
    get:
      summary: Autenticar usuario y generar token
      tags:
        - Authentication
      responses:
        '200':
          description: Login exitoso
        '401':
          description: Error de autenticaci√≥n
